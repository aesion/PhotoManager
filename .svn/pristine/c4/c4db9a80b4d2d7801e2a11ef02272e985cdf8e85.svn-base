package com.pulamsi.photomanager.view;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.StaggeredGridLayoutManager;
import android.view.View;

import com.github.jdsjlzx.interfaces.OnItemClickListener;
import com.github.jdsjlzx.interfaces.OnLoadMoreListener;
import com.github.jdsjlzx.interfaces.OnRefreshListener;
import com.github.jdsjlzx.recyclerview.LRecyclerView;
import com.github.jdsjlzx.recyclerview.LRecyclerViewAdapter;
import com.github.jdsjlzx.recyclerview.ProgressStyle;
import com.github.jdsjlzx.util.RecyclerViewStateUtils;
import com.github.jdsjlzx.view.LoadingFooter;
import com.pulamsi.photomanager.R;
import com.pulamsi.photomanager.adapter.HomeListAdapter;
import com.pulamsi.photomanager.base.AppBus;
import com.pulamsi.photomanager.base.BaseFragment;
import com.pulamsi.photomanager.base.Flag;
import com.pulamsi.photomanager.bean.Gallery;
import com.pulamsi.photomanager.interfaces.IListFragment;
import com.pulamsi.photomanager.prestener.ListFragmentPrestener;
import com.pulamsi.photomanager.widght.fitsystemwindowlayout.BottomDialog;
import com.squareup.otto.Subscribe;

import org.ayo.view.status.DefaultStatusProvider;
import org.ayo.view.status.StatusUIManager;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import butterknife.BindView;

/**
 * User: Daidingkang(ddk19941017@Gmail.com)
 * Date: 2016-11-10
 * Time: 14:20
 * FIXME
 */
public class ListFragment extends BaseFragment implements IListFragment, OnRefreshListener, OnLoadMoreListener, DefaultStatusProvider.DefaultErrorStatusView.OnRetryClickListener, BottomDialog.IShareListener {

    @BindView(R.id.list)
    LRecyclerView lRecyclerView;

    @BindView(R.id.view_content)
    View contentView;

    String cid;
    ListFragmentPrestener listFragmentPrestener;
    HomeListAdapter mHomeListAdapter;
    StaggeredGridLayoutManager layoutManager;
    LRecyclerViewAdapter mLRecyclerViewAdapter;
    Map<String, String> requestParameter;
    static int checkNum;
    private static ArrayList<File> arrayList;

    private boolean isRefresh = false;

    /**
     * 每一页展示多少条数据
     */
    public static final int REQUEST_COUNT = 20;

    private int i = 1;

    private StatusUIManager statusUIManager;


    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }


    public static ListFragment InstanceFragment(String id) {
        ListFragment listFragment = new ListFragment();
        Bundle bundle = new Bundle();
        bundle.putString("id", id);
        listFragment.setArguments(bundle);
        return listFragment;
    }

    @Override
    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

    }

    @Override
    protected void lazyInitAndEvent() {

    }

    @Override
    protected int getContentViewLayoutID() {
        return R.layout.list_content_fragment;
    }

    @Override
    public Context getContext() {
        return context;
    }

    @Override
    public void showLoading() {
        statusUIManager.showLoading();
    }

    @Override
    public void showEmpty() {
        statusUIManager.showEmpty();
    }

    @Override
    public void showError() {
        statusUIManager.showError();
    }

    @Override
    public void showContent() {
        statusUIManager.showContentView();
    }

    @Override
    public void updateListData(List<Gallery> galleryList) {

        mHomeListAdapter.addAll(galleryList);
//        mHomeListAdapter.addDataList(galleryList);
        mHomeListAdapter.notifyDataSetChanged();

        if (isRefresh) {
            lRecyclerView.refreshComplete();
            mLRecyclerViewAdapter.notifyDataSetChanged();
        }

    }

    @Override
    public void loadingListData(List<Gallery> galleryList) {
        if (galleryList.size() < 20) {
            RecyclerViewStateUtils.setFooterViewState(getActivity(), lRecyclerView, REQUEST_COUNT, LoadingFooter.State.TheEnd, null);
            return;
        }
        mHomeListAdapter.addAll(galleryList);
//        mHomeListAdapter.addDataList(galleryList);
        mHomeListAdapter.notifyDataSetChanged();
    }


    //下拉刷新回调
    @Override
    public void onRefresh() {
        RecyclerViewStateUtils.setFooterViewState(lRecyclerView, LoadingFooter.State.Normal);
        isRefresh = true;
        mHomeListAdapter.clear();
        mHomeListAdapter.notifyDataSetChanged();

        requestParameter.put("pageNumber", 1 + "");
        listFragmentPrestener.requestData(requestParameter);
    }

    //加载更多回调
    @Override
    public void onLoadMore() {
        RecyclerViewStateUtils.setFooterViewState(getActivity(), lRecyclerView, REQUEST_COUNT, LoadingFooter.State.Loading, null);
        requestParameter.put("pageNumber", ++i + "");
        listFragmentPrestener.requestLoadData(requestParameter);
    }

    @Subscribe   //订阅事件DataChangedEvent
    public void SubscribeHideDialog(String flag) {
        if (flag.equals(Flag.BACK_TOTOP)) {
            backToTop();
        }
    }


    /**
     * 回顶操作
     */
    public void backToTop() {
        lRecyclerView.scrollToPosition(0);
    }


    @Override
    public void onStart() {
        super.onStart();
        //注册到bus事件总线中
        AppBus.getInstance().register(this);
    }


    @Override
    public void onStop() {
        super.onStop();
        //注销到bus事件
        AppBus.getInstance().unregister(this);
    }


    @Override
    public void share() {
//        if (checkNum == 0) {
//            MyApplication.toastor.showToast("请至少选择一张");
//            return;
//        }
//        SnackbarUtil.showLoading(lRecyclerView, "加载中...");
//        arrayList = new ArrayList<>();
//        arrayList.clear();
    }


    @Override
    protected void onFirstUserVisible() {
        statusUIManager = new StatusUIManager(context, contentView);
        statusUIManager.setOnRetryClickListener(this);

        cid = getArguments().getString("id");
        requestParameter = new HashMap<>();
        requestParameter.put("cid", cid);
        requestParameter.put("pageNumber", 1 + "");
        requestParameter.put("pageSize", REQUEST_COUNT + "");

        listFragmentPrestener = new ListFragmentPrestener(this);
        listFragmentPrestener.requestData(requestParameter);
        showLoading();//第一次Loading
        layoutManager = new StaggeredGridLayoutManager(2, StaggeredGridLayoutManager.VERTICAL);
        layoutManager.setGapStrategy(StaggeredGridLayoutManager.GAP_HANDLING_NONE);//瀑布流解决了Item左右切换
        lRecyclerView.setLayoutManager(layoutManager);
        mHomeListAdapter = new HomeListAdapter(this.getActivity());
        lRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {
            @Override
            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
                super.onScrollStateChanged(recyclerView, newState);
                //防止第一行到顶部有空白区域
                layoutManager.invalidateSpanAssignments();
            }
        });
        mLRecyclerViewAdapter = new LRecyclerViewAdapter(mHomeListAdapter);
        lRecyclerView.setAdapter(mLRecyclerViewAdapter);

        lRecyclerView.setOnRefreshListener(this);
        lRecyclerView.setOnLoadMoreListener(this);

        lRecyclerView.setRefreshProgressStyle(ProgressStyle.BallSpinFadeLoader); //设置下拉刷新Progress的样式

        mLRecyclerViewAdapter.setOnItemClickListener(new OnItemClickListener() {
            @Override
            public void onItemClick(View view, int i) {

                List<Gallery> dataList = mHomeListAdapter.getAllData();
                Intent intent = new Intent(getActivity(), ImageDetailsActivity.class);
                intent.putExtra("pid", dataList.get(i).getId());
                context.startActivity(intent);

            }

            @Override
            public void onItemLongClick(View view, int i) {

            }
        });
    }

    /**
     * 错误重新加载
     */
    @Override
    public void onClick() {
        lRecyclerView.forceToRefresh();//主动刷新
        showLoading();
    }
}
