package com.pulamsi.photomanager.view;

import android.content.Context;
import android.content.Intent;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.StaggeredGridLayoutManager;
import android.view.View;

import com.github.jdsjlzx.interfaces.OnItemClickListener;
import com.github.jdsjlzx.interfaces.OnLoadMoreListener;
import com.github.jdsjlzx.recyclerview.LRecyclerView;
import com.github.jdsjlzx.recyclerview.LRecyclerViewAdapter;
import com.github.jdsjlzx.recyclerview.ProgressStyle;
import com.github.jdsjlzx.util.RecyclerViewStateUtils;
import com.github.jdsjlzx.view.LoadingFooter;
import com.pulamsi.photomanager.R;
import com.pulamsi.photomanager.adapter.HomeListAdapter;
import com.pulamsi.photomanager.base.CommonBaseActivity;
import com.pulamsi.photomanager.base.Constants;
import com.pulamsi.photomanager.bean.CollectionTitle;
import com.pulamsi.photomanager.bean.Gallery;
import com.pulamsi.photomanager.interfaces.ICollectionDetailsActivity;
import com.pulamsi.photomanager.prestener.CollectionDetailsActivityPrestener;

import org.ayo.view.status.DefaultStatusProvider;
import org.ayo.view.status.StatusUIManager;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * User: Daidingkang(ddk19941017@Gmail.com)
 * Date: 2016-11-22
 * Time: 13:58
 * FIXME
 */
public class CollectionDetailsActivity extends CommonBaseActivity implements OnLoadMoreListener, ICollectionDetailsActivity,DefaultStatusProvider.DefaultErrorStatusView.OnRetryClickListener {

    private static final int REQUEST_COUNT = 20;
    private int i = 1;

    private CollectionDetailsActivityPrestener collectionDetailsActivityPrestener;
    private StatusUIManager statusUIManager;
    private LRecyclerView lRecyclerView;
    Map<String, String> requestParameter;
    HomeListAdapter mHomeListAdapter;


    @Override
    protected void init() {
        CollectionTitle collectionTitle = (CollectionTitle) getIntent().getSerializableExtra("collectionTitle");
        toolbar.setTitle(collectionTitle.getPreTypeName());

        lRecyclerView = (LRecyclerView) findViewById(R.id.list);

        collectionDetailsActivityPrestener = new CollectionDetailsActivityPrestener(this);
        statusUIManager = new StatusUIManager(context, findViewById(R.id.view_content));
        statusUIManager.setOnRetryClickListener(this);

        requestParameter = new HashMap<>();
        requestParameter.put("ptid", collectionTitle.getId());
        requestParameter.put("mid", Constants.MID);
        requestParameter.put("pageNumber", 1 + "");
        requestParameter.put("pageSize", REQUEST_COUNT + "");
        collectionDetailsActivityPrestener.requestData(requestParameter);

        final StaggeredGridLayoutManager layoutManager = new StaggeredGridLayoutManager(2, StaggeredGridLayoutManager.VERTICAL);
        layoutManager.setGapStrategy(StaggeredGridLayoutManager.GAP_HANDLING_NONE);//瀑布流解决了Item左右切换
        lRecyclerView.setLayoutManager(layoutManager);
        lRecyclerView.setPullRefreshEnabled(false);
        mHomeListAdapter = new HomeListAdapter(this);
        lRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {
            @Override
            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
                super.onScrollStateChanged(recyclerView, newState);
                //防止第一行到顶部有空白区域
                layoutManager.invalidateSpanAssignments();
            }
        });
        LRecyclerViewAdapter mLRecyclerViewAdapter = new LRecyclerViewAdapter(mHomeListAdapter);
        lRecyclerView.setAdapter(mLRecyclerViewAdapter);

        lRecyclerView.setOnLoadMoreListener(this);

        lRecyclerView.setRefreshProgressStyle(ProgressStyle.BallSpinFadeLoader); //设置下拉刷新Progress的样式

        mLRecyclerViewAdapter.setOnItemClickListener(new OnItemClickListener() {
            @Override
            public void onItemClick(View view, int i) {

                List<Gallery> dataList = mHomeListAdapter.getAllData();
                Intent intent = new Intent(CollectionDetailsActivity.this, ImageDetailsActivity.class);
                intent.putExtra("pid", dataList.get(i).getId());
                context.startActivity(intent);

            }

            @Override
            public void onItemLongClick(View view, int i) {

            }
        });
    }

    @Override
    protected int getContentViewID() {
        return R.layout.collection_details_activity;
    }

    @Override
    protected int getToolBarTitleID() {
        return R.string.collection_details_title;
    }


    @Override
    public Context getContext() {
        return this;
    }

    @Override
    public void showLoading() {
        statusUIManager.showLoading();
    }

    @Override
    public void showEmpty() {
        statusUIManager.showEmpty();
    }

    @Override
    public void showError() {
        statusUIManager.showError();
    }

    @Override
    public void showContent() {
        statusUIManager.showContentView();
    }


    //重新加载
    @Override
    public void onClick() {
        collectionDetailsActivityPrestener.requestData(requestParameter);
    }

    /**
     * 加载更多
     */
    @Override
    public void onLoadMore() {
        RecyclerViewStateUtils.setFooterViewState(this, lRecyclerView, REQUEST_COUNT, LoadingFooter.State.Loading, null);
        requestParameter.put("pageNumber", ++i + "");
        collectionDetailsActivityPrestener.requestLoadData(requestParameter);
    }

    @Override
    public void loadingListData(List<Gallery> galleryList) {
        if (galleryList.size() < 20) {
            RecyclerViewStateUtils.setFooterViewState(this, lRecyclerView, REQUEST_COUNT, LoadingFooter.State.TheEnd, null);
            return;
        }
        mHomeListAdapter.addAll(galleryList);
        mHomeListAdapter.notifyDataSetChanged();
    }

    @Override
    public void updateListData(List<Gallery> galleryList) {
//        mHomeListAdapter.clear();可以不写这句原因你猜
        mHomeListAdapter.addAll(galleryList);
//        mHomeListAdapter.addDataList(galleryList);
        mHomeListAdapter.notifyDataSetChanged();
    }
}
