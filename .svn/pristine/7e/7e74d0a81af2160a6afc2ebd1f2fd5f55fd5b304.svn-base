package com.pulamsi.photomanager.helper;

import android.content.Context;
import android.content.res.TypedArray;
import android.support.design.widget.CoordinatorLayout;
import android.support.v7.widget.Toolbar;
import android.util.AttributeSet;
import android.view.View;

import com.pulamsi.photomanager.R;

import de.hdodenhof.circleimageview.CircleImageView;

/**
 * User: Daidingkang(ddk19941017@Gmail.com)
 * Date: 2016-11-17
 * Time: 12:56
 * FIXME
 */
public class MineImgBehavior extends CoordinatorLayout.Behavior<CircleImageView> {

private final static float MIN_AVATAR_PERCENTAGE_SIZE   = 0.3f;
private final static int EXTRA_FINAL_AVATAR_PADDING     = 120;

private final static String TAG = "behavior";
private Context mContext;

private float mCustomFinalHeight;
private float mAvatarMaxSize;
private float mStartPosition;
private int mStartXPosition;
private float mStartToolbarPosition;
private int mStartYPosition;
private int mFinalYPosition;
private int mStartHeight;
private int mFinalXPosition;

public MineImgBehavior(Context context, AttributeSet attrs) {
        mContext = context;

        if (attrs != null) {
        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.AvatarImageBehavior);
        mCustomFinalHeight = a.getDimension(R.styleable.AvatarImageBehavior_finalHeight, 0);
        a.recycle();
        }
        init();
        }

private void init() {
        bindDimensions();
        }

private void bindDimensions() {
        mAvatarMaxSize = mContext.getResources().getDimension(R.dimen.image_width);
        }

@Override
public boolean layoutDependsOn(CoordinatorLayout parent, CircleImageView child, View dependency) {
        return dependency instanceof Toolbar;
        }

@Override
public boolean onDependentViewChanged(CoordinatorLayout parent, CircleImageView child, View dependency) {
        maybeInitProperties(child, dependency);

//        计算最大滚动距离      toobar位置-状态栏高度
final int maxScrollDistance = (int) (mStartToolbarPosition - getStatusBarHeight());
//        计算滚动的比例
        float expandedPercentageFactor = dependency.getY() / maxScrollDistance;

        float distanceYToSubtract = ((mStartYPosition - mFinalYPosition)
        * (1f - expandedPercentageFactor)) + (child.getHeight()/2);

        float distanceXToSubtract = ((mStartXPosition - mFinalXPosition)
        * (1f - expandedPercentageFactor)) + (child.getWidth()/2);

        float heightToSubtract = ((mStartHeight - mCustomFinalHeight) * (1f - expandedPercentageFactor));
//设置位置
        child.setY(mStartYPosition - distanceYToSubtract);
        child.setX(mStartXPosition - distanceXToSubtract);

        int proportionalAvatarSize = (int) (mAvatarMaxSize * (expandedPercentageFactor));

//        设置大小
        CoordinatorLayout.LayoutParams lp = (CoordinatorLayout.LayoutParams) child.getLayoutParams();
        lp.width = (int) (mStartHeight - heightToSubtract);
        lp.height = (int) (mStartHeight - heightToSubtract);
        child.setLayoutParams(lp);
        return true;
        }

/**
 * 初始化
 * */
private void maybeInitProperties(CircleImageView child, View dependency) {
        if (mStartYPosition == 0)
        mStartYPosition = (int) (dependency.getY());

        if (mFinalYPosition == 0)
        mFinalYPosition = (dependency.getHeight() /2);

        if (mStartHeight == 0)
        mStartHeight = child.getHeight();

        if (mStartXPosition == 0)
        mStartXPosition = (int) (child.getX() + (child.getWidth() / 2));

        if (mFinalXPosition == 0)
        mFinalXPosition= (int) (dependency.getWidth()-mCustomFinalHeight);

        if (mStartToolbarPosition == 0)
        mStartToolbarPosition = dependency.getY() + (dependency.getHeight()/2);
        }

public int getStatusBarHeight() {
        int result = 0;
        int resourceId = mContext.getResources().getIdentifier("status_bar_height", "dimen", "android");

        if (resourceId > 0) {
        result = mContext.getResources().getDimensionPixelSize(resourceId);
        }
        return result;
        }
        }

